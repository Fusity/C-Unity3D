
public class PlayerMotor : MonoBehaviour {using UnityEngine;


public class PlayerControl : MonoBehaviour {

	[SerializeField]
	private float speed = 5f;//Vitesse de deplacment(X et Y)
	
	[SerializeField]
	private float lookSensitivity = 10f;//Vitesse de rotation
	
	private PlayerMotor motor;

	private void Start(){

	motor = GetComponent<PlayerMotor>();

	}

	private void Update(){


		//On va calculer la velocite du mouvement du joueur en Vecteur 3D
		// Traduction : Ici il y a le code de deplacement du joueur

		float _xMov = Input.GetAxisRaw("Horizontal");
		float _zMov = Input.GetAxisRaw("Vertical");
		
		
		Vector3 _movHorizontal = transform.right * _xMov;
		Vector3 _movVertical = transform.forward * _zMov;
		Vector3 _velocity = (_movHorizontal + _movVertical).normalized * speed;
	
		motor.Move(_velocity);
		//On va calculer la rotation du joueur en un Vecteur 3D
		//Traduction : Ici il y a le code pour tourner le joueur avec la souris

		float _yRot = Input.GetAxisRaw("Mouse X");

		Vector3 _rotation = new Vector3(0, _yRot, 0) * lookSensitivity;

		motor.Rotate(_rotation);
		//On va calculer la rotation de la camera en un Vecteur 3D
		//Traduction : Ici il y a le code pour tourner le joueur avec la souris

		float _xRot = Input.GetAxisRaw("Mouse Y");

		Vector3 _cameraRotation = new Vector3(_xRot, 0, 0) * lookSensitivity;

		motor.RotateCamera(_cameraRotation);

	}
}
